// <auto-generated />
using System;
using ADOPSEV1._1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADOPSEV1._1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220518153317_Six")]
    partial class Six
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ADOPSEV1._1.Models.Anwser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("questionId")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("anwsers");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.Branch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("branches");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.Question", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Anwserid")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Anwserid");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.QuestionAwsers", b =>
                {
                    b.Property<int>("anwserId")
                        .HasColumnType("int");

                    b.Property<int>("questionId")
                        .HasColumnType("int");

                    b.ToTable("questionAwsers");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.Quiz", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("madeBy")
                        .HasColumnType("int");

                    b.Property<int>("minutes")
                        .HasColumnType("int");

                    b.Property<int>("numberOfQuestions")
                        .HasColumnType("int");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("id");

                    b.ToTable("quizzes");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.QuizQuestions", b =>
                {
                    b.Property<int>("questionId")
                        .HasColumnType("int");

                    b.Property<int>("quizId")
                        .HasColumnType("int");

                    b.ToTable("quizQuestions");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.Subject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Questionid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Questionid");

                    b.ToTable("subjects");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("validated")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.UserConnectsSubject", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable("userConnectsSubjects");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.Question", b =>
                {
                    b.HasOne("ADOPSEV1._1.Models.Anwser", null)
                        .WithMany("questions")
                        .HasForeignKey("Anwserid");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.Subject", b =>
                {
                    b.HasOne("ADOPSEV1._1.Models.Question", null)
                        .WithMany("Subject")
                        .HasForeignKey("Questionid");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.Anwser", b =>
                {
                    b.Navigation("questions");
                });

            modelBuilder.Entity("ADOPSEV1._1.Models.Question", b =>
                {
                    b.Navigation("Subject");
                });
#pragma warning restore 612, 618
        }
    }
}
